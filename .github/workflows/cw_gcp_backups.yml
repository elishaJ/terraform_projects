name: GCP offsite backups on Cloudways

on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      TF_VAR_CW_API_KEY: ${{ secrets.CW_API_KEY }}
      AWS_REGION: us-east-1
      TF_LOG: INFO

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE}}
          role-session-name: Github-OIDC-Terraform
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        working-directory: cways-backups
        run: |
            terraform init
            echo "GCP creds= $GOOGLE_CREDENTIALS"
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: cways-backups
      
      - name: Terraform Plan
        id: terraform_plan
        run: |
          terraform plan -input=false -no-color -var="CW_API_KEY=${TF_VAR_CW_API_KEY}" -var="GOOGLE_CREDENTIALS=${GOOGLE_CREDENTIALS}"
          echo "::set-output name=exit_code::${{ steps.terraform_plan.outcome }}"
        working-directory: cways-backups
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          TF_VAR_CW_API_KEY: ${{ secrets.CW_API_KEY }}
